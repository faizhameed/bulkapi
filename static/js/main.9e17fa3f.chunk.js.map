{"version":3,"sources":["components/Person.js","components/Fetchapi.js","components/Hello.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["Person","props","react_default","a","createElement","Card","style","width","Body","className","data","Fetchapi","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleShow","setState","show","handleHide","_isMounted","state","datas","more_leads","currentPage","rowsPerPage","clickedData","First Name","Last Name","Email","ID","Country","Mobile","handleNext","bind","assertThisInitialized","handlePrevious","i","console","log","document","getElementById","classList","add","_this2","_this$state","url","concat","headers","Headers","Content-Type","API-KEY","length","req","Request","method","fetch","then","response","json","users","is_more_leads_available","_this3","_this$state2","Accept","btn","remove","apiID","test","_this4","_this$state3","Table","striped","bordered","hover","size","id","map","key","onClick","handleDetails","value","JSON","stringify","variant","Modal","onHide","dialogClassName","aria-labelledby","Header","closeButton","Title","components_Person","Footer","Component","Hello","componentDidUpdate","name","react","Login","_useState","useState","slicedToArray","_useState3","useEffect","type","placeholder","msg","setLogin","onload","login","components_Fetchapi","message","App","_useState2","setMessage","_useState4","_useState5","_useState6","react_router_dom","to","react_router","exact","path","render","components_Hello","assign","component","src_components_Login","Boolean","window","location","hostname","match","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9e17fa3f.chunk.js","sourcesContent":["import React from 'react';\nimport {Card} from 'react-bootstrap';\nimport './Person.css';\n\nfunction Person (props){\n    \n    return (<div>\n        \n        \n\n<Card style={{ width: '100%' }}>\n  \n  <Card.Body>\n\n    <div className=\"totalContainer\">\n        <div className = \"detailContainer\">\n        <h4 className=\"rtitle\">First Name</h4>\n        <h5 className=\"rvalue\">:  {props.data[\"First Name\"]}</h5>\n        </div>\n        <div className = \"detailContainer\">\n        <h4 className=\"rtitle\">Last Name</h4>\n        <h5 className=\"rvalue\">: {props.data[\"Last Name\"]}</h5>\n        </div>\n        <div className = \"detailContainer\">\n        <h4 className=\"rtitle\">ID</h4>\n        <h5 className=\"rvalue\">: {props.data[\"ID\"]}</h5>\n        </div>\n        <div className = \"detailContainer\">\n        <h4 className=\"rtitle\">Email</h4>\n        <h5 className=\"rvalue\">: {props.data[\"Email\"]}</h5>\n        </div>\n        <div className = \"detailContainer\">\n        <h4 className=\"rtitle\">Country</h4>\n        <h5 className=\"rvalue\">: {props.data[\"Country\"]}</h5>\n        </div>\n\n        <div className = \"detailContainer\">\n        <h4 className=\"rtitle\">Mobile</h4>\n        <h5 className=\"rvalue\">: {props.data[\"Mobile\"]}</h5>\n        </div>\n        </div>\n   \n  </Card.Body>\n</Card>\n    </div>\n\n    )\n}\n \nexport default Person  ;","import React, { Component } from 'react';\nimport {Modal,Table} from 'react-bootstrap';\nimport Person from './Person';\n\n\nclass Fetchapi extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = { \n      datas:[],\n      more_leads:true,\n      show:false,   // for modal toggling\n      currentPage:1,\n      rowsPerPage:10,\n      clickedData:{\n        \"First Name\":\"\",\n        \"Last Name\":\"\",\n          \"Email\":\"\",\n          \"ID\":\"\",\n          \"Country\":\"\",\n          \"Mobile\":\"\"\n        }\n      };\n      this.handleNext = this.handleNext.bind(this);\n      this.handlePrevious = this.handlePrevious.bind(this);\n      this.handleShow = this.handleShow.bind(this);\n      this.handleShow = this.handleShow.bind(this);\n      // Modal Funtions\n\n    }\n        handleShow = () => {\n          this.setState({ show: true });\n        };\n    \n       handleHide= () => {\n          this.setState({ show: false });\n        };\n    \n    _isMounted =false; \n    /* To avoid memory leak, warning, just stop  updating component when the component is unmount\n    Check componentDidmount, componentDidUpdate and componentWillUnmount, LifeCycle COmponents of React */\n    \n    // handling click on page\n    handleNext() {\n      if(this.state.more_leads)\n      {\n        var i= this.state.currentPage;\n      i++;\n      console.log(\"NExt page clicked\",i);\n      \n        this.setState({\n          currentPage: i\n        });\n      }\n      else{\n        const btn =document.getElementById(\"next\")\n        btn.classList.add(\"disabled\");               //To avoid clicking button again when there is no leads \n        // available\n      }\n\n      }\n\n     handlePrevious() {\n       \n        var i= this.state.currentPage;\n\n        if(i>1)\n      {\n        i--;\n      console.log(\"page\",i);\n        this.setState({\n          currentPage:i\n        });\n      }\n      else if(i===1||i<1){\n        console.log(\"we are her\")\n        const btn =document.getElementById(\"previous\")\n        btn.classList.add(\"disabled\");\n      }\n        }\ncomponentDidMount() {\n  this._isMounted = true;\n  const {datas, rowsPerPage, currentPage } = this.state;\n  console.log(\"page\",currentPage);\n  const url = `https://test190.cfstech.xyz/lead/retrieval/?page=${currentPage}&record_size=${rowsPerPage}`\n  const headers = new Headers({\n  \"Content-Type\":\"application/json\",\n  \"API-KEY\":\"1619552c-e09f-4ffc-b8c7-931f5cd104b5\"\n  })\n\n  if(datas.length)\n  if(currentPage ===1)\n  {const btn =document.getElementById(\"previous\")\n        btn.classList.add(\"disabled\");}\n\n  let req = new Request(url,\n    {\n    method:'GET',\n    headers: headers,\n    })\n\n  fetch(req)\n    .then(response=> response.json())\n    .then(users => {\n        console.log(users.response);\n        \n        if(this._isMounted){\n\n          this.setState({ datas: users.response,\n            more_leads:users.is_more_leads_available\n          })\n        }\n        \n      });\n \n}\n\ncomponentDidUpdate() {\n  this._isMounted = true;\n  const {datas, rowsPerPage, currentPage } = this.state;\n\n  const url = `https://test190.cfstech.xyz/lead/retrieval/?page=${currentPage}&record_size=${rowsPerPage}`\n  const headers = new Headers({\n  \"Content-Type\":\"application/json\",\n  'Accept': 'application/json',\n  \"API-KEY\":\"1619552c-e09f-4ffc-b8c7-931f5cd104b5\"\n  })\n\n  let req = new Request(url,\n    {\n    method:'GET',\n    headers: headers,\n    })\n\n  fetch(req)\n    .then(response=> response.json())\n    .then(users => {\n      \n        if(this._isMounted)\n        {\n          this.setState({ datas: users.response,\n          more_leads:users.is_more_leads_available\n        })\n      }\n      \n      \n    });\n\n      const btn =document.getElementById(\"previous\")\n      if(datas.length)\n      if(currentPage ===1)\n      {const btn =document.getElementById(\"previous\")\n            btn.classList.add(\"disabled\");}\n        else\n        btn.classList.remove(\"disabled\");\n  console.log(\"apiID from fetch\",this.props.apiID)  ;\n  console.log(\"Test from fetch\",this.props.test)\n}\n\n\n\ncomponentWillUnmount() {\n  this._isMounted = false;\n}\n\n\n\n//Functions\n\nhandleDetails(data){\n  console.log(data[\"First Name\"])\n  this.setState({\n    clickedData:data,\n    show:true\n  })\n \n}\n\n\n    render() { \n\n        const {clickedData, datas} = this.state;\n\n        // Logic for displaying datas\n\n\n      // Logic for displaying page numbers\n    \n        return !datas.length ?\n        <h2>Loading...</h2> :(\n           <div>\n           <Table striped bordered hover size=\"sm\" id=\"myTable\">\n                    <thead>\n                        <tr>\n                       \n                        <th>ID</th>\n                        <th>First Name</th>\n                        <th>Lead Source</th>\n                        <th>Email</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {datas.map((data,i) => {\n        return (<tr key={i}>\n           \n            <td>{data[ \"ID\"]}</td>\n            <td onClick ={() => this.handleDetails(data)}className = \"name\" value ={JSON.stringify(data)}>{data[\"First Name\"]}</td>\n            <td>{data[\"Lead Source\"]}</td>\n            <td>{data[\"Email\"]}</td>\n        </tr>);\n      })}\n                    </tbody>\n                </Table>\n            \n                <button className = \"btn\"variant=\"secondary\" id =\"previous\" onClick = {this.handlePrevious}>Previous</button>\n                <button className=\"btn\"variant = \"secondary\" id = \"next\" onClick = {this.handleNext}>Next</button>\n        {/* MODAL */}\n        <button className=\"btn\" variant=\"primary\" onClick={this.handleShow}>\n        Last Checked\n        </button>\n        <Modal\n        size = \"lg\"\n          show={this.state.show}\n          onHide={this.handleHide}\n          dialogClassName=\"modal-90w\"\n          aria-labelledby=\"example-modal-sizes-title-lg\"\n        >\n          <Modal.Header closeButton>\n            <Modal.Title id=\"example-modal-sizes-title-lg\">\n             <h2>Personal Details</h2>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n             <Person data = {clickedData} handleHide = {this.handleHide}/>\n          </Modal.Body>\n          <Modal.Footer>\n            <button className = \"btn\"variant=\"secondary\" onClick={this.handleHide}>\n              Back\n            </button>\n          </Modal.Footer>\n        </Modal>\n           </div>\n         );\n    }\n}\n \nexport default Fetchapi;","import React, { Fragment,Component } from 'react';\n\n\n\nclass Hello extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      name:'faiz'\n     }\n  }\n\n  componentDidUpdate=()=>{\nconsole.log(\"from heel\",this.props.apiID)\n  }\n  render() { \n    return (    <Fragment>\n      <h1>Welcome</h1>\n    <h2>{this.state.name}</h2>\n    <h3>{this.props.apiID}</h3>\n      {/* Remove below button after test */}\n      \n   </Fragment>\n );\n  }\n}\n \nexport default Hello;\n","import React, {useEffect, Fragment, useState } from 'react';\nimport Fetchapi from './Fetchapi';\nimport './Login.css';\n\nconst Login =(props)=>{\n\n/* const a = input.value;\nfetch(url header with a)\nif(response.json !==\"success\")\nreturn wrond api\n else if    how to call props from a function \n\n*/\n\nconst[apiID]=useState(props.apiID);\nconst[test]=useState(\"Testing\");\n\nuseEffect(() => {\n    console.log(\"apiID from login.js\",props.apiID)\n  });\n\nconst onload=()=> { \n    const msg = document.getElementById('api');\n  // console.log(msg.value);\n props.setLogin(msg.value);\n\n}\n\n    return(\n   <Fragment >\n       <div className = \"clogin\">\n       <h2>\n           LOGIN \n       </h2>\n      \n       <input type=\"password\" id = \"api\"placeholder=\"API KEY...\">\n       </input>\n       <button className=\"btn\"onClick ={() => onload()}>Enter</button>\n       {\n           !props.login?\n           <div className=\"mbox\">\n           <h3>{props.message}</h3>\n       </div>    \n           : \n           <div><h1>Login:{props.login}</h1>\n           <Fetchapi apiID ={apiID} test ={test}/>\n           </div>\n     }\n\n       </div>\n   </Fragment>\n    )\n\n\n}\n\n\nexport default Login;","import React, {useEffect, useState } from 'react';\nimport './App.css';\nimport Fetchapi from './components/Fetchapi';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\nimport Hello from './components/Hello';\nimport Login from './components/Login';\n\n\n\n\nconst App=()=> {\nconst [message,setMessage] = useState(\"\");\nconst [login,setLogin] = useState(false);\nconst [apiID,setID]=useState(\"1619552c-e09f-4ffc-b8c7-931f5cd104b5\");\n\n\nconst setLoginCall = (msg)=>{\n  \n  if(msg === apiID)\n { setLogin(1);\n    setMessage(\"Success\");\n}\n  else\n  setMessage(\"Wrong API\");\n}\nuseEffect(() => {\n  console.log(\"apiID\",apiID)\n});\n\n\n    return ((!login)?<Login apiID={apiID} message = {message} login ={login} setLogin ={setLoginCall}/>:<Router>\n      <div className=\"App\">\n       <h1>\n        Bulk Lead ​ Retrieval ​ API\n        </h1>\n        \n        <button className=\"btn\"  ><Link className=\"link\"to={'/'}> Home </Link></button>\n        <button className = \"btn\"><Link className=\"link\"to={'/fetch'} > Fetch </Link></button>\n        \n      \n    <Switch>\n        <Route\n    exact path='/'\n    render={(props) => <Hello {...props} message={message} setMessage = {setMessage} apiID ={apiID}/>}\n  />\n        <Route path='/fetch' component={Fetchapi} />\n        {/* <Route path = '/hello' render = {Hello}/> */}\n        {/* \n        MEthod to send props to router for future Refrence\n        <Route path = '/detail' render = {(props)=> <Person {...props} data = {this.state.clickedData}/>}/> */}\n       {/*  <Route\n    path='/dashboard'\n    render={(props) => <componentname {...props} propname={proptopass} />}\n  /> */}\n    </Switch>\n        \n      </div>\n      </Router>\n        );\n  \n}\n \nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}